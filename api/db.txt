-- Drop existing tables if they exist (in reverse order of dependency)
DROP TABLE IF EXISTS OrderStatus;
DROP TABLE IF EXISTS OrderItems;
DROP TABLE IF EXISTS Orders;
DROP TABLE IF EXISTS Products;
DROP TABLE IF EXISTS Categories;
DROP TABLE IF EXISTS Users;

-- Create Users table
CREATE TABLE Users (
  userId VARCHAR(255) PRIMARY KEY,
  avatar VARCHAR(255),
  username VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  role VARCHAR(255) DEFAULT 'user',
  createdAt VARCHAR(255) NOT NULL,
  updatedAt VARCHAR(255) NOT NULL
);

-- Create Categories table
CREATE TABLE Categories (
  categoryId VARCHAR(255) PRIMARY KEY,
  categoryName VARCHAR(255) NOT NULL,
  description VARCHAR(255),
  categoryImage VARCHAR(255),
  createdAt VARCHAR(255) NOT NULL,
  updatedAt VARCHAR(255) NOT NULL
);

-- Create Products table
CREATE TABLE Products (
  productId VARCHAR(255) PRIMARY KEY,
  productName VARCHAR(255) NOT NULL,
  image VARCHAR(255) DEFAULT 'noImg.png',
  rating INT DEFAULT 0,
  description VARCHAR(255) DEFAULT 'No Description',
  vegetarian BOOLEAN NOT NULL,
  price INT NOT NULL,
  categoryId VARCHAR(255) NOT NULL,
  createdAt VARCHAR(255) NOT NULL,
  updatedAt VARCHAR(255) NOT NULL,
  FOREIGN KEY (categoryId) REFERENCES Categories(categoryId) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Create Orders table
CREATE TABLE Orders (
  orderId VARCHAR(255) PRIMARY KEY,
  userId VARCHAR(255) NOT NULL,
  orderNumber BIGINT UNIQUE,
  pickUpTime VARCHAR(255) NOT NULL,
  expiryDate VARCHAR(255) NOT NULL,
  total INT NOT NULL,
  createdAt VARCHAR(255) NOT NULL,
  updatedAt VARCHAR(255) NOT NULL,
  FOREIGN KEY (userId) REFERENCES Users(userId) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Create OrderItems table
CREATE TABLE OrderItems (
  orderItemsId VARCHAR(255) PRIMARY KEY,
  orderId VARCHAR(255) NOT NULL,
  productId VARCHAR(255) NOT NULL,
  quantity INT DEFAULT 1,
  subtotal INT NOT NULL,
  createdAt VARCHAR(255) NOT NULL,
  updatedAt VARCHAR(255) NOT NULL,
  FOREIGN KEY (orderId) REFERENCES Orders(orderId) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (productId) REFERENCES Products(productId) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Create OrderStatus table
CREATE TABLE OrderStatus (
  orderStatusId VARCHAR(255) PRIMARY KEY,
  orderId VARCHAR(255) NOT NULL,
  status ENUM('processing', 'placed', 'ready', 'delivered', 'cancelled', 'expired') DEFAULT 'processing',
  createdAt VARCHAR(255) NOT NULL,
  updatedAt VARCHAR(255) NOT NULL,
  FOREIGN KEY (orderId) REFERENCES Orders(orderId) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Insert sample categories
INSERT INTO Categories (categoryId, categoryName, description, categoryImage, createdAt, updatedAt) VALUES
(UUID(), 'All', 'All available food items', 'noCategory.png', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(UUID(), 'NonVeg', 'Non Vegetarian dishes', 'noCategory.png', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(UUID(), 'Chinese', 'Chinese dishes', 'noCategory.png', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(UUID(), 'Salads', 'Fresh and healthy salads', 'noCategory.png', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(UUID(), 'Meals', 'Complete meals', 'noCategory.png', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(UUID(), 'Veg', 'Vegetarian dishes', 'noCategory.png', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(UUID(), 'Beverages', 'Refreshing beverages', 'noCategory.png', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP),
(UUID(), 'Snacks', 'Snack items', 'noCategory.png', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
